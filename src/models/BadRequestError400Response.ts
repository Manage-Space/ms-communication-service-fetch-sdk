/* tslint:disable */
/* eslint-disable */
/**
 * ManageSpace Communication API
 * ManageSpace Communication API Documentation
 *
 * The version of the OpenAPI document: 0.0.11-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BadRequestError400ResponseError } from './BadRequestError400ResponseError';
import {
    BadRequestError400ResponseErrorFromJSON,
    BadRequestError400ResponseErrorFromJSONTyped,
    BadRequestError400ResponseErrorToJSON,
} from './BadRequestError400ResponseError';

/**
 * 
 * @export
 * @interface BadRequestError400Response
 */
export interface BadRequestError400Response {
    /**
     * 
     * @type {Array<string>}
     * @memberof BadRequestError400Response
     */
    readonly data: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof BadRequestError400Response
     */
    readonly success: boolean;
    /**
     * 
     * @type {BadRequestError400ResponseError}
     * @memberof BadRequestError400Response
     */
    error: BadRequestError400ResponseError;
}

/**
 * Check if a given object implements the BadRequestError400Response interface.
 */
export function instanceOfBadRequestError400Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function BadRequestError400ResponseFromJSON(json: any): BadRequestError400Response {
    return BadRequestError400ResponseFromJSONTyped(json, false);
}

export function BadRequestError400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BadRequestError400Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': json['data'],
        'success': json['success'],
        'error': BadRequestError400ResponseErrorFromJSON(json['error']),
    };
}

export function BadRequestError400ResponseToJSON(value?: BadRequestError400Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': BadRequestError400ResponseErrorToJSON(value.error),
    };
}

