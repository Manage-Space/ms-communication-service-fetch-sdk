/* tslint:disable */
/* eslint-disable */
/**
 * ManageSpace Communication API
 * ManageSpace Communication API Documentation
 *
 * The version of the OpenAPI document: 0.0.11-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InternalServerError500ResponseError } from './InternalServerError500ResponseError';
import {
    InternalServerError500ResponseErrorFromJSON,
    InternalServerError500ResponseErrorFromJSONTyped,
    InternalServerError500ResponseErrorToJSON,
} from './InternalServerError500ResponseError';

/**
 * 
 * @export
 * @interface InternalServerError500Response
 */
export interface InternalServerError500Response {
    /**
     * 
     * @type {Array<string>}
     * @memberof InternalServerError500Response
     */
    readonly data: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof InternalServerError500Response
     */
    readonly success: boolean;
    /**
     * 
     * @type {InternalServerError500ResponseError}
     * @memberof InternalServerError500Response
     */
    error: InternalServerError500ResponseError;
}

/**
 * Check if a given object implements the InternalServerError500Response interface.
 */
export function instanceOfInternalServerError500Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function InternalServerError500ResponseFromJSON(json: any): InternalServerError500Response {
    return InternalServerError500ResponseFromJSONTyped(json, false);
}

export function InternalServerError500ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalServerError500Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': json['data'],
        'success': json['success'],
        'error': InternalServerError500ResponseErrorFromJSON(json['error']),
    };
}

export function InternalServerError500ResponseToJSON(value?: InternalServerError500Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': InternalServerError500ResponseErrorToJSON(value.error),
    };
}

